components:

    Bus:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "923e4567-e89b-12d3-a456-426614174009"
        operatorId:
          type: string
          format: uuid
          example: "823e4567-e89b-12d3-a456-426614174008"
        registrationNumber:
          type: string
          example: "WP-NA-1234"
        model:
          type: string
          example: "Ashok Leyland Viking"
        capacity:
          type: integer
          example: 50
        status:
          type: string
          enum: [active, inactive, under_maintenance]
          example: "active"
        createdAt:
          type: string
          format: date-time
          example: "2025-07-12T12:23:00+05:30"
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-12T12:23:00+05:30"
      required:
        - id
        - operatorId
        - registrationNumber
        - model
        - capacity
        - status

paths:
  /buses:
    get:
      summary: Retrieve all buses
      description: Retrieve a paginated, filtered, and sorted list of buses.
      operationId: getBuses
      tags:
        - Buses
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
        - name: filter[operatorId]
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by operator ID
        - name: filter[registrationNumber]
          in: query
          schema:
            type: string
          description: Filter by registration number (partial match)
        - name: filter[status]
          in: query
          schema:
            type: string
            enum: [active, inactive, under_maintenance]
          description: Filter by status
        - name: sort
          in: query
          schema:
            type: string
            enum: [registrationNumber:asc, registrationNumber:desc, createdAt:asc, createdAt:desc]
          description: Sort by field (e.g., registrationNumber:asc)
      responses:
        '200':
          description: List of buses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bus'
                  meta:
                    $ref: '#/components/schemas/Meta'
              example:
                data:
                  - id: "923e4567-e89b-12d3-a456-426614174009"
                    operatorId: "823e4567-e89b-12d3-a456-426614174008"
                    registrationNumber: "WP-NA-1234"
                    model: "Ashok Leyland Viking"
                    capacity: 50
                    status: "active"
                    createdAt: "2025-07-12T12:23:00+05:30"
                    updatedAt: "2025-07-12T12:23:00+05:30"
                meta:
                  total: 100
                  page: 1
                  limit: 20
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "UNAUTHORIZED"
                    message: "Invalid or missing JWT token"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "FORBIDDEN"
                    message: "Insufficient permissions"
      security:
        - bearerAuth: []
    post:
      summary: Create a new bus
      description: Create a new bus.
      operationId: createBus
      tags:
        - Buses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operatorId:
                  type: string
                  format: uuid
                  example: "823e4567-e89b-12d3-a456-426614174008"
                registrationNumber:
                  type: string
                  example: "WP-NA-1234"
                model:
                  type: string
                  example: "Ashok Leyland Viking"
                capacity:
                  type: integer
                  example: 50
                status:
                  type: string
                  enum: [active, inactive, under_maintenance]
                  example: "active"
              required:
                - operatorId
                - registrationNumber
                - model
                - capacity
                - status
            example:
              operatorId: "823e4567-e89b-12d3-a456-426614174008"
              registrationNumber: "WP-NA-1234"
              model: "Ashok Leyland Viking"
              capacity: 50
              status: "active"
      responses:
        '201':
          description: Bus created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bus'
              example:
                data:
                  id: "923e4567-e89b-12d3-a456-426614174009"
                  operatorId: "823e4567-e89b-12d3-a456-426614174008"
                  registrationNumber: "WP-NA-1234"
                  model: "Ashok Leyland Viking"
                  capacity: 50
                  status: "active"
                  createdAt: "2025-07-12T12:23:00+05:30"
                  updatedAt: "2025-07-12T12:23:00+05:30"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "INVALID_INPUT"
                    message: "Registration number is required"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "FORBIDDEN"
                    message: "Requires buses.create permission"
      security:
        - bearerAuth: []
  /buses/{id}:
    get:
      summary: Retrieve a specific bus
      description: Retrieve details of a specific bus, including associated operator and permits.
      operationId: getBus
      tags:
        - Buses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Bus ID
      responses:
        '200':
          description: Bus details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bus'
              example:
                data:
                  id: "923e4567-e89b-12d3-a456-426614174009"
                  operatorId: "823e4567-e89b-12d3-a456-426614174008"
                  registrationNumber: "WP-NA-1234"
                  model: "Ashok Leyland Viking"
                  capacity: 50
                  status: "active"
                  createdAt: "2025-07-12T12:23:00+05:30"
                  updatedAt: "2025-07-12T12:23:00+05:30"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "NOT_FOUND"
                    message: "Bus not found"
      security:
        - bearerAuth: []
    put:
      summary: Update a bus
      description: Update an existing bus.
      operationId: updateBus
      tags:
        - Buses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Bus ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operatorId:
                  type: string
                  format: uuid
                  example: "823e4567-e89b-12d3-a456-426614174008"
                registrationNumber:
                  type: string
                  example: "WP-NA-1234"
                model:
                  type: string
                  example: "Ashok Leyland Viking"
                capacity:
                  type: integer
                  example: 50
                status:
                  type: string
                  enum: [active, inactive, under_maintenance]
                  example: "active"
              required:
                - operatorId
                - registrationNumber
                - model
                - capacity
                - status
            example:
              operatorId: "823e4567-e89b-12d3-a456-426614174008"
              registrationNumber: "WP-NA-1234"
              model: "Ashok Leyland Viking"
              capacity: 50
              status: "active"
      responses:
        '200':
          description: Bus updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bus'
              example:
                data:
                  id: "923e4567-e89b-12d3-a456-426614174009"
                  operatorId: "823e4567-e89b-12d3-a456-426614174008"
                  registrationNumber: "WP-NA-1234"
                  model: "Ashok Leyland Viking"
                  capacity: 50
                  status: "active"
                  createdAt: "2025-07-12T12:23:00+05:30"
                  updatedAt: "2025-07-12T12:30:00+05:30"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "FORBIDDEN"
                    message: "Requires buses.update permission"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    delete:
      summary: Delete a bus
      description: Delete a bus, with reference check for permits or assignments.
      operationId: deleteBus
      tags:
        - Buses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Bus ID
      responses:
        '200':
          description: Bus deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Bus deleted"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "FORBIDDEN"
                    message: "Requires buses.delete permission"
        '409':
          description: Conflict due to references
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "CONFLICT"
                    message: "Cannot delete bus with active permits or assignments"
      security:
        - bearerAuth: []
  /buses/{id}/audit:
    get:
      summary: Retrieve audit logs for a bus
      description: Retrieve paginated audit logs for a specific bus.
      operationId: getBusAuditLogs
      tags:
        - Buses
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Bus ID
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
        - name: filter[action]
          in: query
          schema:
            type: string
            enum: [create, update, delete]
          description: Filter by action
      responses:
        '200':
          description: Audit logs for the bus
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  meta:
                    $ref: '#/components/schemas/Meta'
              example:
                data:
                  - id: "323e4567-e89b-12d3-a456-426614174002"
                    action: "create"
                    userId: "423e4567-e89b-12d3-a456-426614174003"
                    timestamp: "2025-07-12T12:23:00+05:30"
                    details:
                      previous: {}
                      current:
                        registrationNumber: "WP-NA-1234"
                        model: "Ashok Leyland Viking"
                meta:
                  total: 10
                  page: 1
                  limit: 20
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "FORBIDDEN"
                    message: "Requires buses.audit permission"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                errors:
                  - code: "NOT_FOUND"
                    message: "Bus not found"
      security:
        - bearerAuth: []